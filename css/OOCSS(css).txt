・OOCSS
	Object Oriented CSSと呼ばれ、オブジェクト指向に基づいて考案された設計思想。TwitterやGithub
	などで採用されており、Bootstrapがこの思想のもとに設計されている。
	パーツパーツの再利用性を上げ、レゴの様に積み上げていく設計。

	原則：
	構造(Structure)とスキン(Skin/見た目)を分けて考える
	コンテナ(Container)と内容(Contents)を分けて考える
	構造とスキンの分離とは
	まず構造とはwidth, height, border, padding, margin など形を作るモノ。一方、スキンはcolor,
	 border-color, background-colorなど見た目のスタイルを司るモノです。

	構造をスキンと分離する事で、同じ形だけど違う色のボタンなど再利用しやすくなります。

	コンテナとコンテンツの分離とは
	コンテナとコンテンツとは箱とその中身です。グリッドレイアウトなどを想像すると分かりやすいかと思います。コンテナには
	コンテナの、コンテンツにはコンテンツのCSSを別々に定義します。スタイルの適用では要素指定を行わず、クラスでの
	指定のみを行います。
	こうする事でHTMLの構造に依存せず、構造に変化があってもCSSの修正が不要になります。これによりCSSの
	メンテナンス性が向上します。
